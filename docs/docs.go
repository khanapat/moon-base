// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Khanapat.A",
            "url": "http://www.swagger.io/support",
            "email": "k.apiwattanawong@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/buy": {
            "post": {
                "description": "Method for buying coin.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coin"
                ],
                "summary": "Buy Coin",
                "parameters": [
                    {
                        "description": "object body to create coin",
                        "name": "BuyCoinRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/coin.BuyCoinRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/history": {
            "get": {
                "description": "Method for searching history transaction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coin"
                ],
                "summary": "Get History Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "History Date From",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "History Date To",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/coin.History"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/reset": {
            "get": {
                "description": "Method for setting up supply coin.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coin"
                ],
                "summary": "reset and setup supply coin",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/supply": {
            "get": {
                "description": "Method for getting coin supply.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coin"
                ],
                "summary": "Get Coin Supply",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coin ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Coin Name",
                        "name": "coinName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/coin.Coin"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "coin.BuyCoinRequest": {
            "type": "object",
            "properties": {
                "coinId": {
                    "type": "integer",
                    "example": 1
                },
                "moon": {
                    "type": "number",
                    "example": 2
                },
                "slippage": {
                    "type": "number",
                    "example": 5
                },
                "thbt": {
                    "type": "number",
                    "example": 100
                },
                "userId": {
                    "type": "string",
                    "example": "XXX"
                }
            }
        },
        "coin.Coin": {
            "type": "object",
            "properties": {
                "coinName": {
                    "type": "string",
                    "example": "MOON"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "supply": {
                    "type": "number",
                    "example": 1000
                }
            }
        },
        "coin.History": {
            "type": "object",
            "properties": {
                "dateTime": {
                    "type": "string",
                    "example": "2021-04-01 10:00"
                },
                "moon": {
                    "type": "number",
                    "example": 0.2
                },
                "number": {
                    "type": "integer",
                    "example": 1
                },
                "rate": {
                    "type": "string",
                    "example": "1 MOON = 55 THBT | 0.01818181"
                },
                "thbt": {
                    "type": "number",
                    "example": 100
                },
                "userId": {
                    "type": "string",
                    "example": "AAA"
                }
            }
        },
        "response.ErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "description": {
                    "type": "string",
                    "example": "Please contact administrator for more information."
                },
                "error": {
                    "type": "object"
                },
                "title": {
                    "type": "string",
                    "example": "Cannot register public key."
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "object"
                },
                "title": {
                    "type": "string",
                    "example": "Register key success."
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:9090",
	BasePath:    "/moon",
	Schemes:     []string{"http", "https"},
	Title:       "Moon Coin",
	Description: "Moon Coin for exchange.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
